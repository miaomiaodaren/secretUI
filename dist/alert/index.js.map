{"version":3,"sources":["alert/index.tsx"],"names":["prefixCls","Alert","text","count","setCount","testAlert","e","console","log","target","value"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,MAAMA,SAAS,GAAG,aAAlB;;AAMA,MAAMC,KAAK,GAAG,SAARA,KAAQ,OAAsB;AAAA,QAAnBC,IAAmB,QAAnBA,IAAmB;;AAClC,oBAA0B,qBAAS,CAAT,CAA1B;AAAA;AAAA,QAAOC,KAAP;AAAA,QAAcC,QAAd;;AACA,QAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBD,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,KAFD;;AAGA,wBACE;AAAK,MAAA,SAAS,EAAEH,SAAhB;AAA2B,MAAA,OAAO,EAAEK;AAApC,qBACaH,IADb,eAEE,gCAAC,WAAD;AAAO,MAAA,KAAK,EAAE,CAAd;AAAiB,MAAA,QAAQ,EAAE,kBAACI,CAAD;AAAA,eAAOC,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB,CAAP;AAAA;AAA3B,MAFF,CADF;AAMD,GAXD;;iBAaeT,K","sourcesContent":["import React, { useState } from 'react';\nimport { Input } from 'antd';\n\nconst prefixCls = 'happy-alert';\n\ninterface IProps {\n  text?: string;\n}\n\nconst Alert = ({ text }: IProps) => {\n  const [count, setCount] = useState(0);\n  const testAlert = () => {\n    setCount(count + 1);\n  };\n  return (\n    <div className={prefixCls} onClick={testAlert}>\n      test Alert{text}\n      <Input value={1} onChange={(e) => console.log(e.target.value)}></Input>\n    </div>\n  );\n};\n\nexport default Alert;\n"],"file":"index.js"}