{"version":3,"sources":["UseVirtualList/index.tsx"],"names":["useState","useRef","useEffect","useMemo","useSize","prefixCls","UseVirtualList","list","options","containerRef","size","target","current","start","end","state","setState","itemHeight","overscan","getViewCapacity","containerHeight","Math","ceil","sum","capacity","i","length","height","getOffset","scrollTop","floor","offset","calculateRange","element","viewCapacity","clientHeight","from","to","width","totalHeight","reduce","_","index","getDistanceTop","slice","scrollTo","offsetTop","map","ele","data","containerProps","ref","onScroll","e","preventDefault","style","overflowY","wrapperProps","marginTop"],"mappings":"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","sourcesContent":["import type React from 'react';\nimport type { MutableRefObject } from 'react';\nimport { useState, useRef, useEffect, useMemo } from 'react';\nimport useSize from '../useSize';\n\nconst prefixCls = 'UseVirtualList';\n\ninterface IProps<T = any> {\n  list: T[];\n  options: {\n    itemHeight: number | ((index: number) => number);\n    overscan?: number;\n  };\n}\n\nconst UseVirtualList = (list: IProps['list'], options: IProps['options']) => {\n  const containerRef = useRef<HTMLElement | null>();\n  const size = useSize({ target: containerRef.current as HTMLElement });\n  const [state, setState] = useState({ start: 0, end: 10 });\n  const { itemHeight, overscan = 5 } = options;\n  const getViewCapacity = (containerHeight: number) => {\n    if (typeof itemHeight === 'number') {\n      return Math.ceil(containerHeight / itemHeight);\n    }\n    const { start = 0 } = state;\n    let sum = 0;\n    let capacity = 0;\n    // eslint-disable-next-line no-plusplus\n    for (let i = start; i < list.length; i++) {\n      const height = (itemHeight as (index: number) => number)(i);\n      sum += height;\n      if (sum >= containerHeight) {\n        capacity = i;\n        break;\n      }\n    }\n    return capacity - start;\n  };\n  const getOffset = (scrollTop: number) => {\n    if (typeof itemHeight === 'number') {\n      return Math.floor(scrollTop / itemHeight) + 1;\n    }\n    let sum = 0;\n    let offset = 0;\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < list.length; i++) {\n      const height = (itemHeight as (index: number) => number)(i);\n      sum += height;\n      if (sum >= scrollTop) {\n        offset = i;\n        break;\n      }\n    }\n    return offset + 1;\n  };\n  const calculateRange = () => {\n    const element = containerRef.current;\n    if (element) {\n      const offset = getOffset(element.scrollTop);\n      const viewCapacity = getViewCapacity(element.clientHeight);\n      const from = offset - overscan;\n      const to = offset + viewCapacity + overscan;\n      setState({\n        start: from < 0 ? 0 : from,\n        end: to > list.length ? list.length : to,\n      });\n    }\n  };\n  useEffect(() => {\n    calculateRange();\n  }, [size.width, size.height, list.length]);\n  const totalHeight = useMemo(() => {\n    if (typeof itemHeight === 'number') {\n      return list.length * itemHeight;\n    }\n    return list.reduce((sum, _, index) => sum + itemHeight(index), 0);\n  }, [list.length]);\n  const getDistanceTop = (index: number) => {\n    // 如果有缓存，优先返回缓存值\n    // if (enableCache && distanceCache.current[index]) {\n    //   return distanceCache.current[index];\n    // }\n    if (typeof itemHeight === 'number') {\n      const height = index * itemHeight;\n      // if (enableCache) {\n      //   distanceCache.current[index] = height;\n      // }\n      return height;\n    }\n    const height = list.slice(0, index).reduce((sum, _, i) => sum + itemHeight(i), 0);\n    // if (enableCache) {\n    //   distanceCache.current[index] = height;\n    // }\n    return height;\n  };\n\n  const scrollTo = (index: number) => {\n    if (containerRef.current) {\n      containerRef.current.scrollTop = getDistanceTop(index);\n      calculateRange();\n    }\n  };\n\n  const offsetTop = useMemo(() => getDistanceTop(state.start), [state.start]);\n  return {\n    list: list\n      .slice(state.start, state.end)\n      .map((ele, index) => ({ data: ele, index: index + state.start })),\n    containerProps: {\n      ref: (ele: any) => {\n        containerRef.current = ele;\n      },\n      onScroll: (e: React.ChangeEvent<HTMLInputElement>) => {\n        e.preventDefault();\n        calculateRange();\n      },\n      style: { overflowY: 'auto' },\n    },\n    scrollTo,\n    wrapperProps: {\n      style: {\n        width: '100%',\n        height: totalHeight - offsetTop,\n        marginTop: offsetTop,\n      },\n    },\n  };\n};\n\nexport default UseVirtualList;\n"],"file":"index.js"}