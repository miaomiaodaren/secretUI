{"version":3,"sources":["UseLoad/index.tsx"],"names":["prefixCls","UseForm","children","message","visible"],"mappings":";;;;;;;;;AACA;;AAEA,IAAMA,SAAS,GAAG,SAAlB;;AAOA,IAAMC,OAAmB,GAAG,SAAtBA,OAAsB,OAA4C;AAAA,MAAzCC,QAAyC,QAAzCA,QAAyC;AAAA,MAA/BC,OAA+B,QAA/BA,OAA+B;AAAA,0BAAtBC,OAAsB;AAAA,MAAtBA,OAAsB,6BAAZ,KAAY;AACtE,MAAI,CAACA,OAAL,EAAc,OAAO,IAAP;AACd,sBACE;AAAK,IAAA,SAAS,EAAEJ;AAAhB,kBACE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE;AAAK,IAAA,SAAS,EAAC;AAAf,IADF,eAEE;AAAK,IAAA,SAAS,EAAC;AAAf,IAFF,eAGE;AAAK,IAAA,SAAS,EAAC;AAAf,IAHF,CADF,EAMGG,OAAO,iBAAI;AAAG,IAAA,SAAS,EAAC;AAAb,KAA4BA,OAA5B,CANd,eAOE;AAAK,IAAA,SAAS,EAAC;AAAf,KAAkCD,QAAlC,CAPF,CADF;AAWD,CAbD;;eAeeD,O","sourcesContent":["import type { FC, ReactElement } from 'react';\nimport React from 'react';\n\nconst prefixCls = 'useLoad';\n\ninterface IProps {\n  message?: string | ReactElement;\n  visible?: boolean;\n}\n\nconst UseForm: FC<IProps> = ({ children, message, visible = false }) => {\n  if (!visible) return null;\n  return (\n    <div className={prefixCls}>\n      <div className=\"loader\">\n        <div className=\"dot\"></div>\n        <div className=\"dot\"></div>\n        <div className=\"dot\"></div>\n      </div>\n      {message && <p className=\"loading-msg\">{message}</p>}\n      <div className=\"loading-content\">{children}</div>\n    </div>\n  );\n};\n\nexport default UseForm;\n"],"file":"index.js"}